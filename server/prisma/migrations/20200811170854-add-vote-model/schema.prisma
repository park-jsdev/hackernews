// Prisma has a schema, think of it as a database schema (its like an ORM)
// It has: 
// 1. Data source: Specifies your database connection.
// 2. Generator: Indicates that you want to genenerate Prisma Client.
// 3. Data model: Defines your application models. Each model will be mapped to a table in the underlying database.

// Data source: Tells Prisma youâ€™ll be using SQLite for your database connection.
datasource db {
  provider = "sqlite" 
  url = "***"
}

// Generator: Indicates that you want to genenerate Prisma Client.
generator client {
  provider = "prisma-client-js"
}

// Data model: Here, we have written out our Link as a model.
model Link {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  description String
  url         String
  postedBy    User?    @relation(fields: [postedById], references: [id]) // add a relation between the User and the existing Link type to express that Links are posted by Users.
  postedById  Int?
  votes       Vote[]
}

// add a User type to your Prisma data model
model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  links     Link[]
  votes     Vote[]
}

// Adding a vote mutation
model Vote {
  id     Int  @id @default(autoincrement())
  link   Link @relation(fields: [linkId], references: [id])
  linkId Int
  user   User @relation(fields: [userId], references: [id])
  userId Int

  @@unique([linkId, userId])
}